import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import chalk from "chalk";
import { copy } from "fs-extra";
import path from "path";
import { sassPlugin } from "esbuild-sass-plugin";

const SRC_DIR = "./src";
const BUILD_DIR = "./build/obsidian-function-plot";
const INSTALL_DIR =
	"C:/Users/Ricky/OneDrive - University of North Florida/Apps/Obsidian/Notes/.obsidian/plugins/obsidian-function-plot/";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

esbuild
	.build({
		banner: {
			js: banner,
		},

		entryPoints: [
			path.join(SRC_DIR, "main.tsx"),
			path.join(SRC_DIR, "styles.scss"),
		],
		outdir: BUILD_DIR,
		outbase: SRC_DIR,
		bundle: true,
		external: [
			"obsidian",
			"electron",
			"@codemirror/autocomplete",
			"@codemirror/closebrackets",
			"@codemirror/collab",
			"@codemirror/commands",
			"@codemirror/comment",
			"@codemirror/fold",
			"@codemirror/gutter",
			"@codemirror/highlight",
			"@codemirror/history",
			"@codemirror/language",
			"@codemirror/lint",
			"@codemirror/matchbrackets",
			"@codemirror/panel",
			"@codemirror/rangeset",
			"@codemirror/rectangular-selection",
			"@codemirror/search",
			"@codemirror/state",
			"@codemirror/stream-parser",
			"@codemirror/text",
			"@codemirror/tooltip",
			"@codemirror/view",
			...builtins,
		],
		format: "cjs",
		watch: !prod && {
			onRebuild(error, result) {
				if (error) {
					console.error(
						chalk.redBright("Build Failed.: ") + chalk.red(error)
					);
					return;
				} else {
					console.log(
						chalk.greenBright(
							"\nBuild Succeeded. Copying into Obsidian's plugin directory..."
						)
					);

					copy(BUILD_DIR, INSTALL_DIR, (err) => {
						if (err)
							console.error(
								chalk.redBright("Copy Failed.: ") +
									chalk.red(err.message)
							);
						else console.log(chalk.greenBright("Copy Successful."));
					});
				}
			},
		},
		target: "es2016",
		logLevel: "info",

		sourcemap: prod ? false : "inline",
		treeShaking: true,
		loader: { ".css": "css" },
		plugins: [sassPlugin()],
	})
	.catch(() => process.exit(1));
